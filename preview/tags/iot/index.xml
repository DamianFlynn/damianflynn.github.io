<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IoT on Incredible Technology, Incredibly Simple</title><link>https://damianflynn.github.io/preview/tags/iot/</link><description>Recent content in IoT on Incredible Technology, Incredibly Simple</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 13 May 2025 22:45:00 +0000</lastBuildDate><atom:link href="https://damianflynn.github.io/preview/tags/iot/index.xml" rel="self" type="application/rss+xml"/><item><title>IoT - NodeRED on Arc-Enabled Edge</title><link>https://damianflynn.github.io/preview/posts/iot-nodered-on-arc-enabled-edge/</link><pubDate>Mon, 28 Apr 2025 13:16:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-nodered-on-arc-enabled-edge/</guid><description>Learn how to deploy a fully integrated Node-RED environment inside a K3s Kubernetes cluster on an Azure Arc-connected edge device. This guide walks you through namespace setup, persistent storage, service exposure, and secure access over SSH tunnels. Simulate MQTT and Modbus devices, visualize flows, and forward real-time telemetry to Azure MQ and OPC UA—all without opening firewall ports. Ideal for industrial IoT scenarios needing secure hybrid connectivity and local processing.</description></item><item><title>IoT - Azure IoT Operations</title><link>https://damianflynn.github.io/preview/posts/iot-azure-iot-operations/</link><pubDate>Fri, 25 Apr 2025 23:07:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-azure-iot-operations/</guid><description>&lt;p>An Azure Arc-enabled Kubernetes cluster is a prerequisite for deploying Azure IoT Operations. This article describes how to prepare a cluster before you deploy Azure IoT Operations. This article includes guidance for Ubuntu&lt;/p>
&lt;blockquote>
&lt;p>[!warning] ⚠️
Microsoft supports Azure Kubernetes Service (AKS) Edge Essentials for deployments on Windows and K3s for deployments on Ubuntu. If you want to deploy Azure IoT Operations to a multi-node solution, use K3s on Ubuntu.
Starting from an Ubuntu server, which has be Arc Enabled, we can use this as a base for the Azure IoT Operations.&lt;/p></description></item><item><title>IoT - Azure Arc Connected K3s</title><link>https://damianflynn.github.io/preview/posts/iot-azure-arc-connected-k3s/</link><pubDate>Thu, 24 Apr 2025 12:24:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-azure-arc-connected-k3s/</guid><description>Transform your on-premises infrastructure into a cloud-integrated powerhouse by combining K3s Kubernetes with Azure Arc on an Ubuntu server. This guide walks you through every step—from deploying K3s and configuring user access to connecting your cluster to Azure Arc, enabling observability with Grafana, and integrating full-scale monitoring with Azure Monitor. Whether you&amp;rsquo;re building edge deployments or hybrid IoT solutions, this tutorial gives you a production-grade environment with the flexibility of the cloud and control of local resources.</description></item><item><title>CBus MQTT Bridge on Raspberry PI</title><link>https://damianflynn.github.io/preview/posts/cbus-mqtt-bridge-on-raspberry-pi/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/cbus-mqtt-bridge-on-raspberry-pi/</guid><description>&lt;p>Turn back to 2007; My wife and I built our home, integrating many smart technologies, including the Clipsal C-Bus lighting system. This solution is classified as a Prosumer technology, and is designed to integrate into whole house automation systems.&lt;/p>
&lt;p>The C-Bus system implements however a propriatory technology, and utilizes a communication protocol which is not ‘open source’; however, accepting a licence agreement will permit access to this protocol for creating an programming interface.&lt;/p></description></item><item><title>Running FastLED on the Dual-Core ESP32</title><link>https://damianflynn.github.io/preview/posts/running-fastled-on-the-dual-core-esp32/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/running-fastled-on-the-dual-core-esp32/</guid><description>&lt;p>There are many projects posted over the web which implement the excellent FastLED library on the ESP12 processor; however locating a project which implements this on the more powerful sibling is a lot more difficult.&lt;/p>
&lt;p>So, with a few failed attempts and a lot of patching samples together; I have a stable running implementation which you can clone or fork to get up and running quickly with your own projects.&lt;/p></description></item><item><title>My Journey to the Internet of Things</title><link>https://damianflynn.github.io/preview/posts/my-journey-to-the-internet-of-things/</link><pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/my-journey-to-the-internet-of-things/</guid><description>&lt;p>In a previous post, I referred to an embedded device which is called a &lt;strong>NodeMCU&lt;/strong>. This device is a developer kit, designed to make it easy to develop and test programs for the embedded &lt;em>ESP8266 System on a Chip&lt;/em>. Many manufacturers are offering both developer and production kits which leverage this SoC; including the Wemos D1, Lolin, and in my case the NodeMCU.&lt;/p>
&lt;p>The function of these developer kits is to add some supporting features, for example, a USB to serial converter which makes programming a lot easier, in addition to a couple of buttons, and maybe an LED or two, for testing some simple scenarios with.&lt;/p></description></item></channel></rss>