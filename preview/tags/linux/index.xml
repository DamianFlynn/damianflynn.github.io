<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Incredible Technology, Incredibly Simple</title><link>https://damianflynn.github.io/preview/tags/linux/</link><description>Recent content in Linux on Incredible Technology, Incredibly Simple</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 13 May 2025 22:45:00 +0000</lastBuildDate><atom:link href="https://damianflynn.github.io/preview/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>IoT - NodeRED on Arc-Enabled Edge</title><link>https://damianflynn.github.io/preview/posts/iot-nodered-on-arc-enabled-edge/</link><pubDate>Mon, 28 Apr 2025 13:16:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-nodered-on-arc-enabled-edge/</guid><description>Learn how to deploy a fully integrated Node-RED environment inside a K3s Kubernetes cluster on an Azure Arc-connected edge device. This guide walks you through namespace setup, persistent storage, service exposure, and secure access over SSH tunnels. Simulate MQTT and Modbus devices, visualize flows, and forward real-time telemetry to Azure MQ and OPC UA—all without opening firewall ports. Ideal for industrial IoT scenarios needing secure hybrid connectivity and local processing.</description></item><item><title>IoT - Azure IoT Operations</title><link>https://damianflynn.github.io/preview/posts/iot-azure-iot-operations/</link><pubDate>Fri, 25 Apr 2025 23:07:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-azure-iot-operations/</guid><description>&lt;p>An Azure Arc-enabled Kubernetes cluster is a prerequisite for deploying Azure IoT Operations. This article describes how to prepare a cluster before you deploy Azure IoT Operations. This article includes guidance for Ubuntu&lt;/p>
&lt;blockquote>
&lt;p>[!warning] ⚠️
Microsoft supports Azure Kubernetes Service (AKS) Edge Essentials for deployments on Windows and K3s for deployments on Ubuntu. If you want to deploy Azure IoT Operations to a multi-node solution, use K3s on Ubuntu.
Starting from an Ubuntu server, which has be Arc Enabled, we can use this as a base for the Azure IoT Operations.&lt;/p></description></item><item><title>IoT - Azure Arc Connected K3s</title><link>https://damianflynn.github.io/preview/posts/iot-azure-arc-connected-k3s/</link><pubDate>Thu, 24 Apr 2025 12:24:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/iot-azure-arc-connected-k3s/</guid><description>Transform your on-premises infrastructure into a cloud-integrated powerhouse by combining K3s Kubernetes with Azure Arc on an Ubuntu server. This guide walks you through every step—from deploying K3s and configuring user access to connecting your cluster to Azure Arc, enabling observability with Grafana, and integrating full-scale monitoring with Azure Monitor. Whether you&amp;rsquo;re building edge deployments or hybrid IoT solutions, this tutorial gives you a production-grade environment with the flexibility of the cloud and control of local resources.</description></item><item><title>Azure Arc enabling an Ubuntu Server</title><link>https://damianflynn.github.io/preview/posts/azure-arc-enabling-an-ubuntu-server/</link><pubDate>Wed, 23 Apr 2025 07:53:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/azure-arc-enabling-an-ubuntu-server/</guid><description>Discover how to transform a basic Ubuntu server into a fully Azure Arc-enabled edge device. This step-by-step guide walks you through onboarding a Linux server into Azure Arc, installing the hybrid agent, establishing secure remote access over web sockets, and enabling centralized management through the Azure Portal. Whether for IoT, hybrid cloud, or secure remote administration, this post equips you with the tools to bridge your edge environments seamlessly with Azure.</description></item><item><title>Streaming Vinyl On Sonos</title><link>https://damianflynn.github.io/preview/posts/streaming-vinyl-on-sonos/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/streaming-vinyl-on-sonos/</guid><description>&lt;p>&lt;strong>Mixup some Vyinl Oldies, a little Ice to cast, and a PI for some energy, and your ready to go&lt;/strong>&lt;/p>
&lt;p>A little known trivia - I was once a Disc Jokey, and spent a lot of my youth behind the decks, in clubs around the West Of Ireland. Today, I still am the proud owner of a very large collection of Vynil and CD music, which of course deserves to get a second life with my digital streaming audio system powered by Sonos&lt;/p></description></item><item><title>Change Detection Using Oxidized</title><link>https://damianflynn.github.io/preview/posts/change-detection-using-oxidized/</link><pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/change-detection-using-oxidized/</guid><description>&lt;p>Oxidized is a Linux based service which has the ability to monitor a device’s configuration, including software and hardware. Current configuration is backed up from each device and stored to a GIT repository to maintain history of changes.&lt;/p>
&lt;p>The process is very simple:&lt;/p>
&lt;ol>
&lt;li>Login to each device in the router list router.db,&lt;/li>
&lt;li>Run Commands to get the information that will be saved&lt;/li>
&lt;li>Clean the output&lt;/li>
&lt;li>Commit the Changes to GIT Repository
The tool is coded in &lt;em>Ruby&lt;/em>, and implements a Domain Specific Language (DSL) for interaction.&lt;/li>
&lt;/ol>
&lt;p>Finally, there is a Web based User experience included in the solution so we can get a fast overview of the world.&lt;/p></description></item><item><title>Guacamole Azure Appliance</title><link>https://damianflynn.github.io/preview/posts/guacamole-azure-appliance/</link><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/guacamole-azure-appliance/</guid><description>&lt;p>Apache Guacamole is a free and open source web application which lets you access your dashboard from anywhere using a modern web browser. It is a clientless remote desktop gateway which only requires Guacamole installed on a server and a web browser supporting HTML5.&lt;/p>
&lt;p>Guacamole is the best way to keep multiple instances accessible over the internet. Once you add an instance to Guacamole, you don’t need to remember the password as it can securely store the credentials. It also lets you share the desktops among other users in a group. Guacamole supports multiple connection methods such as SSH, Telnet, VNC, and RDP.&lt;/p></description></item><item><title>CBus MQTT Bridge on Raspberry PI</title><link>https://damianflynn.github.io/preview/posts/cbus-mqtt-bridge-on-raspberry-pi/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/cbus-mqtt-bridge-on-raspberry-pi/</guid><description>&lt;p>Turn back to 2007; My wife and I built our home, integrating many smart technologies, including the Clipsal C-Bus lighting system. This solution is classified as a Prosumer technology, and is designed to integrate into whole house automation systems.&lt;/p>
&lt;p>The C-Bus system implements however a propriatory technology, and utilizes a communication protocol which is not ‘open source’; however, accepting a licence agreement will permit access to this protocol for creating an programming interface.&lt;/p></description></item><item><title>Installing Docker and Compose on Raspbian Buster</title><link>https://damianflynn.github.io/preview/posts/installing-docker-and-compose-on-raspbian-buster/</link><pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/installing-docker-and-compose-on-raspbian-buster/</guid><description>&lt;p>Quickly update a new Raspberry Pi, which has an install of Raspbian Buster with Docker and Docker-compose.&lt;/p>
&lt;h1 id="docker">Docker&lt;/h1>
&lt;p>This is simple, as the Docker team have done all the work&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -fsSL get.docker.com -o get-docker.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sh get-docker.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And, we can add our user to the Docker group so we do not need the &lt;code>sudo&lt;/code> every time. I am using the environment variable &lt;code>$USER&lt;/code>; which indicates who is logged in currently. In my case this is the user &lt;em>pi&lt;/em>.&lt;/p></description></item><item><title>Waking Deamons</title><link>https://damianflynn.github.io/preview/posts/waking-deamons/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/preview/posts/waking-deamons/</guid><description>&lt;p>With a multitude of Raspberry PI’s deployed around the house, each taking a dedicated duty in ensuring that services run transparently; It is not uncommon for me to discover the initialization scripts designed to have these services auto start at boot is not working.&lt;/p>
&lt;p>The content of this post is a reference for different methods which can be employed to resolve these stubborn daemons; which always are to fond of reappearing after an unplanned outage; or what is more commonly referred to as a Power Failure!&lt;/p></description></item></channel></rss>