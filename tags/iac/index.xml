<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IaC on Incredible Technology, Incredibly Simple</title><link>https://damianflynn.github.io/tags/iac/</link><description>Recent content in IaC on Incredible Technology, Incredibly Simple</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 13 May 2025 22:44:00 +0000</lastBuildDate><atom:link href="https://damianflynn.github.io/tags/iac/index.xml" rel="self" type="application/rss+xml"/><item><title>IoT - Azure Arc Connected K3s</title><link>https://damianflynn.github.io/posts/iot-azure-arc-connected-k3s/</link><pubDate>Thu, 24 Apr 2025 12:24:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/iot-azure-arc-connected-k3s/</guid><description>Transform your on-premises infrastructure into a cloud-integrated powerhouse by combining K3s Kubernetes with Azure Arc on an Ubuntu server. This guide walks you through every stepâ€”from deploying K3s and configuring user access to connecting your cluster to Azure Arc, enabling observability with Grafana, and integrating full-scale monitoring with Azure Monitor. Whether you&amp;rsquo;re building edge deployments or hybrid IoT solutions, this tutorial gives you a production-grade environment with the flexibility of the cloud and control of local resources.</description></item><item><title>Azure Arc enabling an Ubuntu Server</title><link>https://damianflynn.github.io/posts/azure-arc-enabling-an-ubuntu-server/</link><pubDate>Wed, 23 Apr 2025 07:53:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/azure-arc-enabling-an-ubuntu-server/</guid><description>Discover how to transform a basic Ubuntu server into a fully Azure Arc-enabled edge device. This step-by-step guide walks you through onboarding a Linux server into Azure Arc, installing the hybrid agent, establishing secure remote access over web sockets, and enabling centralized management through the Azure Portal. Whether for IoT, hybrid cloud, or secure remote administration, this post equips you with the tools to bridge your edge environments seamlessly with Azure.</description></item><item><title>Bicep - Tags as Parameters</title><link>https://damianflynn.github.io/posts/bicep-tags-as-parameters/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/bicep-tags-as-parameters/</guid><description>&lt;p>&lt;strong>Deploying infrastructure ARM Templates to Azure, but using Tags and their respective value as the parameter configuration settings&lt;/strong>&lt;/p>
&lt;p>In a post earlier, we look at using arm to lookup the value of tags&amp;rsquo; at both the Subscription and Resource Level.&lt;/p>
&lt;p>With Bicep this is much easier to understand. This is the same lab configuration as in the original post, but this time to code should be a lot more readable.&lt;/p></description></item><item><title>Azure IaC - Tags as Parameters</title><link>https://damianflynn.github.io/posts/azure-iac-tags-as-parameters/</link><pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/azure-iac-tags-as-parameters/</guid><description>&lt;p>Deploying infrastructure ARM Templates to Azure, but using Tags and thier respective value as the parameter configuration settings&lt;/p>
&lt;p>In the post, I am going to introduce a concept which will allow you to greatly up your Infrastructure as Code game, by using Azure as a State Machine!&lt;/p>
&lt;p>One of the typical challenges when deploying ARM templates, is the sheer number of parameters which we find as a requirement to complete a deployment; which as you will appreciate gets considerably harder as we target many environments.&lt;/p></description></item><item><title>Azure IaC - Function Keys</title><link>https://damianflynn.github.io/posts/azure-iac-function-keys/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/azure-iac-function-keys/</guid><description>&lt;p>&lt;strong>Retrieve the Function Host Keys while deploying an ARM template&lt;/strong>&lt;/p>
&lt;p>Todays conundrum: As I deploy a new Function Application, I need a simple methodology to retrieve the Host Keys for the function application so that I validate the deployment has been successful; and potentially pass on the key to related services, for example API Management.&lt;/p>
&lt;p>As before, I am leveraging templates, and will stay cloud native; this time depending on the functions Output ability to present the keys.&lt;/p></description></item><item><title>Azure IaC - Appending Tags</title><link>https://damianflynn.github.io/posts/azure-iac-appending-tags/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/azure-iac-appending-tags/</guid><description>&lt;p>&lt;strong>Dynamically appending Tags to our ARM template with the union function&lt;/strong>&lt;/p>
&lt;p>Todays conundrum: As I am leveraging templates, there will always be some standard tags I require to implement within the template, but I also require to provide additional tags as a parameter to be appended with the deployment.&lt;/p>
&lt;p>My objective is to set up tags within an ARM template in accordance with good governance and the Cloud adoption framework.&lt;/p></description></item></channel></rss>