<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Management on Incredible Technology, Incredibly Simple</title><link>https://damianflynn.github.io/categories/azure-management/</link><description>Recent content in Azure Management on Incredible Technology, Incredibly Simple</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 19 Jul 2024 15:23:00 +0000</lastBuildDate><atom:link href="https://damianflynn.github.io/categories/azure-management/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure Enterprise Agreement Delegation</title><link>https://damianflynn.github.io/posts/azure-enterprise-agreement-delegation/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/azure-enterprise-agreement-delegation/</guid><description>&lt;p>Delegating Azure Enterprise Agreement Owner privileges to a Service Principal (SPN)&lt;/p>
&lt;p>Under the Enterprise agreement we have some different Personaâ€™s, which have quite different abilities and operations upon which they are permitted to preform.&lt;/p>
&lt;p>Before we being the process of delegation, It is important to understand this Hierarchy, so we can correctly proceed with the technical work ahead.&lt;/p>
&lt;h1 id="enterprise-administrator">Enterprise Administrator&lt;/h1>
&lt;p>Has the ability to add additional Enterprise and Department Administrators, Additional this persona can&lt;/p></description></item><item><title>Managed Applications and Custom Resource Providers</title><link>https://damianflynn.github.io/posts/managed-applications-and-custom-resource-providers/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/managed-applications-and-custom-resource-providers/</guid><description>&lt;p>Magnify the power of extending Azure platform by enabling customers and partners to easily bring in custom solutions to azure. These can be scoped for offering to our own enterprise, or just some selected customers; or even all customers.&lt;/p>
&lt;p>Challenges with extending azure include many of the typical thoughts we face&lt;/p>
&lt;ul>
&lt;li>As part of my deployment i need to do extra works&lt;/li>
&lt;li>Need to interface with external APIs, create users, storage tables, calling APIs external to Azure, while deploying ARM templates&lt;/li>
&lt;li>200 Services, which service should i be selected, What is the correct VM SKU? what would be more cost efficient&lt;/li>
&lt;li>How do I integrate my service into Azure; What is the correct option to expose my service to my enterprise, or all azure users&lt;/li>
&lt;/ul>
&lt;h1 id="how-do-we-deploy-and-offer">How do we deploy and offer?&lt;/h1>
&lt;h2 id="deployment-script">Deployment Script&lt;/h2>
&lt;p>&lt;strong>New&lt;/strong> resource type - &lt;code>Microsoft.Resources/DeploymentScripts&lt;/code>&lt;/p></description></item><item><title>Configure VS Code with Azure Cloud Shell</title><link>https://damianflynn.github.io/posts/configure-vs-code-with-azure-cloud-shell/</link><pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/configure-vs-code-with-azure-cloud-shell/</guid><description>&lt;p>After years living in tools like Visual Studio, and PowerShell; Currently my primary landing ground is Visual Studio Code. With my target audience firmly defined as Azure; In this post I am going to share my notes on how to get these two tools working harmonisly; and to make the experience a little richer, we will also mount the underlying Cloud Drive File Share of the Azure Cloud Shell on our local computer as a PowerShell Drive (PSDrive).&lt;/p></description></item><item><title>Defining Policy as Code with ARM Templates</title><link>https://damianflynn.github.io/posts/defining-policy-as-code-with-arm-templates/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><guid>https://damianflynn.github.io/posts/defining-policy-as-code-with-arm-templates/</guid><description>&lt;p>My colleagues and friends &lt;a href="https://blog.tyang.org/2018/06/06/using-arm-templates-to-deploying-azure-policy-definitions-that-requires-input-parameters/">Tao Yang&lt;/a> , and &lt;a href="https://cloudadministrator.net/2018/07/17/defining-input-parameters-for-policy-definitions-in-arm-template/">Stanislav Zhelyazkov&lt;/a> have both recently posts interesting topics on how to implement your Azure Policy as Code which I strongly recommend you take a few moments to review&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.tyang.org/2018/06/06/using-arm-templates-to-deploying-azure-policy-definitions-that-requires-input-parameters/">Using ARM Templates to deploy azure policy definitions that require input parameters&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloudadministrator.net/2018/07/17/defining-input-parameters-for-policy-definitions-in-arm-template/">Defining input parameters for policy definitions in ARM Templates&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="improving-readability">Improving Readability&lt;/h1>
&lt;p>Both of these topics address the core of the challenges we face when approaching policy as an Infrastructure as Code problem. However, one of the things that is lost in the translation is the readability of the templates which they are deploying.&lt;/p></description></item></channel></rss>